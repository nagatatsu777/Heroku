{"version":3,"sources":["services/notes.js","App.js","index.js"],"names":["baseUrl","axios","get","newObject","console","log","post","name","number","id","put","delete","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","search","setSearch","bs","setBs","useEffect","noteService","then","response","data","DeleteButton","deleteFunction","onClick","DeleteName","window","confirm","newPerson","filter","pe","onSubmit","event","preventDefault","onChange","target","value","type","personObject","length","checkArr","concat","toLowerCase","map","ps","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.abd45e8c.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n  console.log(\"Create\")\n  return axios.post(`${baseUrl}/${newObject.name}/${newObject.number}/${newObject.id}`, newObject)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\nconst deletion = (id)=>{\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default {getAll, create, update, deletion\n}","/*\nimport './App.css';\nimport Note from './components/Note'\nimport Course from './course'\nconst App = ({ notes}) => {\n  const courses = [\n    {\n      name: 'Half Stack application development',\n      id: 1,\n      parts: [\n        {\n          name: 'Fundamentals of React',\n          exercises: 10,\n          id: 1\n        },\n        {\n          name: 'Using props to pass data',\n          exercises: 7,\n          id: 2\n        },\n        {\n          name: 'State of a component',\n          exercises: 14,\n          id: 3\n        },\n        {\n          name: 'Redux',\n          exercises: 11,\n          id: 4\n        }\n      ]\n    }, \n    {\n      name: 'Node.js',\n      id: 2,\n      parts: [\n        {\n          name: 'Routing',\n          exercises: 3,\n          id: 1\n        },\n        {\n          name: 'Middlewares',\n          exercises: 7,\n          id: 2\n        }\n      ]\n    }\n  ]\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      {courses.map(cr =><Course key = {cr.id} cr = {cr}/>)}\n    </div>\n  )\n}\n\nexport default App;\n*/\n// part B\n\nimport React, { useState, useEffect } from 'react'\nimport noteService from './services/notes'\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState(0)\n  const[search, setSearch] = useState('')\n  const[bs,setBs] = useState(false)\n  useEffect(() => {\n    console.log('effect')\n    noteService.getAll()\n      .then(response => {\n        console.log('promise fulfilled')\n        setPersons(response.data)\n\n      })\n  }, [])\n  const changeName = (event) =>{\n    setNewName(event.target.value)\n  }\n  const changeNumber = (event) =>{\n    setNewNumber(event.target.value)\n  }\n  const changeSearch = (event) =>{\n    setSearch(event.target.value)\n  }\n  const DeleteButton = ({deleteFunction})=>{\n    return(\n      <button onClick = {deleteFunction}>delete</button>\n    )\n  }\n  const searchT = (event) =>{\n    event.preventDefault()\n    if(bs){\n      setBs(false)\n    }\n    else{\n      setBs(true)\n    }\n  }\n  const addName = (event) => {\n    event.preventDefault()\n    console.log('success')\n    const personObject = {\n      name: newName,\n      number: newNumber,\n      id:persons.length+1\n    }\n    console.log('1')\n    const checkArr = persons.filter(pe => pe.name === personObject.name)\n    if(checkArr.length>=1){\n      console.log('2')\n      noteService.update(checkArr[0].id,personObject)\n      .then(response=>{\n        setPersons(persons.filter(pe=>checkArr[0].id!==pe.id).concat(response.data))\n        setNewName('')\n        setNewNumber('')\n      })\n      console.log('3')\n    }\n    else{ \n      console.log('4')\n    noteService.create(personObject)\n      .then(response => {\n        setPersons(persons.concat(response.data))\n        setNewName('')\n        setNewNumber(0)\n      })\n      setNewName('')\n      setNewNumber(0)\n      console.log('5')\n    }\n  }\n  const DeleteName = (id) =>{\n    \n    if(window.confirm(\"Do you really want to delete?\")){\n    noteService.deletion(id)\n    .then(response =>{\n      const newPerson = persons.filter(pe => pe.id!==id)\n      setPersons(newPerson)\n    })\n    console.log('6')\n  }\n\n  }\n  return (\n    <div>\n      <h2>Search</h2>\n      <form onSubmit = {searchT}>\n        <div>\n          search:<input onChange = {changeSearch}/>\n        </div>\n        <div>\n          <button type = \"submit\">Search</button>\n        </div>\n      </form>\n      <h2>Phonebook</h2>\n      <form onSubmit = {addName}>\n        <div>\n          name: <input onChange = {changeName}/>\n        </div>\n        <div>\n          number: <input onChange = {changeNumber}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      {bs? persons.filter(pe=>search.toLowerCase() === pe.name.toLowerCase()).map(ps => <div key = {ps.id}><p>{ps.name} : {ps.number}</p><DeleteButton deleteFunction = {()=>DeleteName(ps.id)}/></div>) : persons.map(pe => <div key = {pe.id}><p>{pe.name} : {pe.number}</p><DeleteButton deleteFunction = {()=>DeleteName(pe.id)}/></div>)}\n    </div>\n  )\n}\n\nexport default App\n\n/*\nimport React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport noteService from './services/notes'\n\n\nconst AddNew = ({addText})=>{\n  return(\n      <button onClick = {addText}>Add</button>\n  )\n}\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important' : 'make important'\n\n  return (\n    <li>\n      {note.content} \n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n\nuseEffect(() => {\n    console.log('effect')\n    noteService.getAll()\n      .then(response => {\n        console.log('promise fulfilled')\n        setNotes(response.data)\n      })\n  }, [])\n  console.log('render', notes.length, 'notes')\n  const addNote = () => {\n    console.log('success')\n    const noteObject = {\n      content: newNote,\n      date: new Date(),\n      important: Math.random() > 0.5,\n    }\n  \n    noteService.create(noteObject)\n      .then(response => {\n        setNotes(notes.concat(response.data))\n        setNewNote('')\n      })\n  }\n  const changeNotes = (event) =>{\n    setNewNote(event.target.value)\n  }\n  const toggleImportanceOf = id => {\n    const url = `http://localhost:3001/notes/${id}`\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService.update(id, changedNote).then(response => {\n      setNotes(notes.map(note => note.id !== id ? note : response.data))\n    })\n  }\n  return(\n    <div>\n      <input onChange = {changeNotes}/>\n      <AddNew addText = {addNote}/>\n      {notes.map((note, i) => \n          <Note\n            key={i}\n            note={note} \n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        )}\n    </div>\n  )\n}\nexport default App\n*/\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport axios from 'axios'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}